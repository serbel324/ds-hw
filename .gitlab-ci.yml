variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - test

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == "main"


1-guarantees:
  image: docker:latest
  stage: test
  variables:
    TASK_IMAGE: $CI_REGISTRY_IMAGE/1-guarantees
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$TASK_IMAGE${tag}" . -f 1-guarantees/Dockerfile
    - docker push "$TASK_IMAGE${tag}"
    - docker run --rm "$TASK_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - changes:
        - dslib/*
        - 1-guarantees/*
        - .gitlab-ci.yml


2-practice-grpc:
  image: docker:latest
  stage: test
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - cd 2-practice-grpc
    - docker-compose build server client1 client2 tests
    - docker-compose up -d server client1 client2
    - docker-compose run --rm tests
  rules:
    - changes:
        - 2-practice-grpc/*
        - .gitlab-ci.yml
